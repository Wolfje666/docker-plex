apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: plex-centos
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 3
    name: plex
  spec:
    tags:
    - from:
        kind: DockerImage
        name: jameseckersall/plex
      generation: 3
      importPolicy: {}
      name: centos
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    name: ${PLEX_SERVICE_NAME}
  spec:
    recreateParams:
      timeoutSeconds: 600
    replicas: 1
    selector:
      deploymentconfig: ${PLEX_SERVICE_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: ${PLEX_SERVICE_NAME}
      spec:
        containers:
        - image: " "
          imagePullPolicy: Always
          name: plex
          ports:
          - containerPort: 32414
            protocol: UDP
          - containerPort: 8324
            protocol: TCP
          - containerPort: 32413
            protocol: UDP
          - containerPort: 1900
            protocol: UDP
          - containerPort: 32400
            protocol: TCP
          - containerPort: 32469
            protocol: TCP
          - containerPort: 3005
            protocol: TCP
          - containerPort: 32410
            protocol: UDP
          - containerPort: 32412
            protocol: UDP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /Library
            name: plex-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: plex-config
          persistentVolumeClaim:
            claimName: plex-config
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - plex
        from:
          kind: ImageStreamTag
          name: plex:centos
          namespace: media
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: ${PLEX_SERVICE_NAME}
  spec:
    host: ${PLEX_ROUTE_NAME}
    port:
      targetPort: 32400-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${PLEX_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${PLEX_SERVICE_NAME}
  spec:
    ports:
    - name: 1900-udp
      port: 1900
      protocol: UDP
      targetPort: 1900
    - name: 3005-tcp
      port: 3005
      protocol: TCP
      targetPort: 3005
    - name: 8324-tcp
      port: 8324
      protocol: TCP
      targetPort: 8324
    - name: 32400-tcp
      port: 32400
      protocol: TCP
      targetPort: 32400
    - name: 32410-udp
      port: 32410
      protocol: UDP
      targetPort: 32410
    - name: 32412-udp
      port: 32412
      protocol: UDP
      targetPort: 32412
    - name: 32413-udp
      port: 32413
      protocol: UDP
      targetPort: 32413
    - name: 32414-udp
      port: 32414
      protocol: UDP
      targetPort: 32414
    - name: 32469-tcp
      port: 32469
      protocol: TCP
      targetPort: 32469
    selector:
      deploymentconfig: ${PLEX_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    name: plex-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${CONFIG_VOLUME_CAPACITY}
  status: {}
parameters:
- description: The name of the OpenShift route exposed for plex.
  displayName: Plex Route Name
  name: PLEX_ROUTE_NAME
- description: The name of the OpenShift Service exposed for plex.
  displayName: Plex Service Name
  name: PLEX_SERVICE_NAME
  required: true
  value: plex
- description: Volume space available for config, e.g. 512Mi, 2Gi.
  displayName: Config Volume Capacity
  name: CONFIG_VOLUME_CAPACITY
  required: true
  value: 512Mi

